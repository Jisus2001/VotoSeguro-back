trigger:
  branches:
    include:
      - main

pool:
  name: VotoSeguroPool

variables:
  DOCKER_BUILDKIT: 1

steps:
  # 1Ô∏è‚É£ Checkout del c√≥digo
  - checkout: self

  # 2Ô∏è‚É£ Instalar Node.js
  - task: NodeTool@0
    inputs:
      versionSpec: "18.x"
    displayName: "Install Node.js"

  # 3Ô∏è‚É£ Instalar dependencias
  - script: |
      npm ci
    displayName: "Install npm dependencies"

  # 4Ô∏è‚É£ Build de las im√°genes de Docker
  - script: |
      docker-compose build
    displayName: "Build Docker images"

  # 5Ô∏è‚É£ Levantar contenedores de tests (detached)
  - script: |
      docker-compose up -d
    displayName: "Start test containers"

  # 6Ô∏è‚É£ Diagn√≥stico de memoria dentro del contenedor unit-tests
  - script: |
      docker exec unit-tests free -h
    displayName: "Verificar memoria disponible en unit-tests"

  # 7Ô∏è‚É£ Ejecutar Unit Tests con l√≠mite de memoria ajustado
  - script: |
      docker exec unit-tests sh -c "node --max-old-space-size=1024 node_modules/jest/bin/jest.js tests/Unitarias --runInBand --maxWorkers=50% --verbose --reporters=default --reporters=jest-junit"
    displayName: "Run Unit Tests (Memory 1024)"

  # 8Ô∏è‚É£ Ejecutar Integration Tests con l√≠mite de memoria ajustado
  - script: |
      docker exec integration-tests sh -c "node --max-old-space-size=2048 node_modules/jest/bin/jest.js tests/Integracion --runInBand --maxWorkers=50% --verbose --reporters=default --reporters=jest-junit"
    displayName: "Run Integration Tests (Memory 2048)"
    env:
      DOCKER_HOST: tcp://host.docker.internal:2375
      TESTCONTAINERS_HOST_OVERRIDE: host.docker.internal
      TESTCONTAINERS_RYUK_DISABLED: true
      TESTCONTAINERS_CHECKS_DISABLE: true

  # 9Ô∏è‚É£ Publicar resultados Unit Tests
  - task: PublishTestResults@2
    inputs:
      testResultsFiles: "**/reports/unit/*.xml"
      testRunTitle: "Unit Tests"
      mergeTestResults: true
      failTaskOnFailedTests: true

  # üîü Publicar resultados Integration Tests
  - task: PublishTestResults@2
    inputs:
      testResultsFiles: "**/reports/integration/*.xml"
      testRunTitle: "Integration Tests"
      mergeTestResults: true
      failTaskOnFailedTests: true

  # üîπ Limpiar contenedores al final
  - script: |
      docker-compose down -v
    displayName: "Clean up test containers"
