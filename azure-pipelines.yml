trigger:
  branches:
    include:
      - main

pool:
  name: 'VotoSeguroPool'

variables:
  DOCKER_BUILDKIT: 1
  COMPOSE_CONVERT_WINDOWS_PATHS: 1

steps:
  # 1️⃣ Checkout del código
  - checkout: self

  # 2️⃣ Instalar Node.js
  - task: NodeTool@0
    inputs:
      versionSpec: '18.x'
    displayName: 'Install Node.js'

  # 3️⃣ Instalar dependencias NPM
  - script: npm ci
    displayName: 'Install npm dependencies'

  # 4️⃣ Build de imágenes Docker
  - script: |
      echo Building Docker images...
      docker-compose build
    displayName: 'Build Docker images'

  # 5️⃣ Levantar contenedores de test (modo detach)
  - script: |
      echo Starting test containers...
      docker-compose up -d
    displayName: 'Start test containers'

  # 6️⃣ Ejecutar pruebas unitarias dentro del contenedor
  - script: |
      echo Running Unit Tests...
      docker exec unit-tests npm run test:unit || exit 0
    displayName: 'Run Unit Tests'

  # 7️⃣ Ejecutar pruebas de integración en host
  - script: |
      echo Running Integration Tests...
      npx jest tests/Integracion --verbose --runInBand --reporters=default --reporters=jest-junit
    env:
      DOCKER_HOST: tcp://localhost:2375
      TESTCONTAINERS_RYUK_DISABLED: true
      TESTCONTAINERS_CHECKS_DISABLE: true
    displayName: 'Run Integration Tests (host)'

  # 8️⃣ Publicar resultados de pruebas
  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/reports/**/*.xml'
      mergeTestResults: true
      failTaskOnFailedTests: true
      testRunTitle: 'VotoSeguro CI Tests'

  # 9️⃣ Limpiar contenedores al final
  - script: |
      echo Cleaning up containers...
      docker-compose down -v
    displayName: 'Clean up test containers'
